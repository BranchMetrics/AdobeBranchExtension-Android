apply plugin: 'com.android.library'

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)

    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_MINIMUM)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFile('proguard-rules.pro')
        }
    }
}

configurations {
    javadocDeps
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Branch
    api 'io.branch.sdk.android:library:5.0.7'
    javadocDeps 'io.branch.sdk.android:library:5.0.7'
    implementation ('com.google.android.gms:play-services-ads-identifier:17.0.0')
    // for Huawei devices without GMS, adding it requires bumping up min api level to 19 though, so we
    // leave it up to the client to add it following Branch documentation here: https://help.branch.io/developers-hub/docs/android-basic-integration
    //implementation 'com.huawei.hms:ads-identifier:3.4.28.305'

    // Adobe
    androidTestImplementation 'com.adobe.marketing.mobile:analytics:1.+'
    androidTestImplementation 'com.adobe.marketing.mobile:userprofile:1.+'
    implementation 'com.adobe.marketing.mobile:sdk-core:1.5.7'
}

//------------- Javadocs ---------------//
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task docs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath = files(((Object) android.bootClasspath.join(File.pathSeparator)))
}

task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps

    exclude '**/R.html', '**/R.*.html', '**/index.html'

    options {
        links "http://docs.oracle.com/javase/8/docs/api/"
        linksOffline "http://d.android.com/reference","${android.sdkDirectory}/docs/reference"

        tags = [ "apiNote", "implSpec", "implNote" ]
    }
}

task javadocJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

apply from: 'https://raw.githubusercontent.com/BranchMetrics/GradleToMavenOptionalDependencies/master/gradle-maven-push.gradle'
